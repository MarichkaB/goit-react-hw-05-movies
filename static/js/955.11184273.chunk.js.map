{"version":3,"file":"static/js/955.11184273.chunk.js","mappings":"4MAEMA,EAAQ,+BACRC,EAAU,mCAEVC,EAAW,mCAAG,6GAEOC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAH5B,cAEVG,EAFU,yBAKTA,GALS,gCAOhBC,QAAQC,IAAR,MAPgB,yDAAH,qDAWXC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,gGAEGN,EAAAA,GAAAA,IAAA,UAClBH,EADkB,mEACiDC,EADjD,iBACiEQ,EADjE,kBAC+ED,IAHlF,cAEdJ,EAFc,yBAKbA,GALa,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,wDAWfI,EAAe,mCAAG,WAAMC,GAAN,gGAEGR,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,oBACmBV,EADnB,oBAFH,cAEdG,EAFc,yBAKbA,GALa,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWfM,EAAe,mCAAG,WAAMD,GAAN,gGAEGR,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,oBAFH,cAEdG,EAFc,yBAKbA,GALa,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWfO,EAAe,mCAAG,WAAMF,GAAN,gGAEGR,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,2BAFH,cAEdG,EAFc,yBAKbA,GALa,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWRQ,EAAM,CACjBZ,YAAAA,EACAK,gBAAAA,EACAG,gBAAAA,EACAE,uBAAAA,EACAC,gBAAAA,E,4HCxBF,EApCgB,WACd,IAAQF,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WACRL,EAAAA,EAAAA,gBAAoBH,GACjBS,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACFA,EAAKC,QAAQC,OAIlBL,EAAWG,EAAKC,SAHdE,EAAAA,GAAAA,KAAW,aAId,IAEAC,OAAM,SAAAC,GAAK,OAAIrB,QAAQC,IAAIoB,EAAMC,QAAtB,GACf,GAAE,CAAChB,IAECM,EAAQM,OAIb,OACE,iCACE,qCACA,wBACGN,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACX,2BACE,uBAAIF,GAAkB,aACtB,uBAAIE,MAFGD,EADE,QASpB,C","sources":["API/api.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = '4e5147b94dd9ab5d00dab97571ce77c5';\n\nconst getTrending = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getSearchMovies = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?&language=en-U&include_adult=true&api_key=${API_KEY}&page=${page}&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieСredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const API = {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieСredits,\n  getMovieReviews,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API } from 'API/api';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMovieReviews(movieId)\n      .then(({ data }) => {\n        if (!data.results.length) {\n          toast.warn('No reviews');\n          return;\n        }\n        setReviews(data.results);\n      })\n\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  if (!reviews.length) {\n    return;\n  }\n\n  return (\n    <>\n      <h3>Reviews</h3>\n      <ul>\n        {reviews.map(({ author, id, content }) => (\n          <li key={id}>\n            <p>{author ? author : 'no name'}</p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrending","axios","response","console","log","getSearchMovies","query","page","getMovieDetails","movieId","getMovieСredits","getMovieReviews","API","useParams","useState","reviews","setReviews","useEffect","then","data","results","length","toast","catch","error","message","map","author","id","content"],"sourceRoot":""}